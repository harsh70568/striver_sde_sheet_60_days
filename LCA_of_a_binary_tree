/************************************************************

    Following is the TreeNode class structure

    template <typename T>
    class TreeNode {
       public:
        T data;
        TreeNode<T> *left;
        TreeNode<T> *right;

        TreeNode(T data) {
            this->data = data;
            left = NULL;
            right = NULL;
        }
    };

************************************************************/
TreeNode<int>* solve(TreeNode<int> *root, int x, int y)
{
    if(root == NULL) return NULL;
    if(root->data == x || root->data == y) return root;
     TreeNode<int>* l = solve(root->left,x,y);
     TreeNode<int>* r = solve(root->right,x,y);
    if(l && r) return root;
    if(l) return l;
    else return r;
}
int lowestCommonAncestor(TreeNode<int> *root, int x, int y)
{
	//    Write your code here
    TreeNode<int>* ans = solve(root,x,y);
    return ans->data;
}
